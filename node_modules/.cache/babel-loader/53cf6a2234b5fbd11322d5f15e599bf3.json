{"ast":null,"code":"var _jsxFileName = \"/home/krishnavamsi/Documents/chat/src/components/login/login.jsx\";\nimport React from \"react\";\nimport loginImg from \"../../logo.svg\";\n\nvar rp = require(\"request-promise\");\n\nexport class Login extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleUserName = event => {\n      this.setState({\n        userName: event.target.value\n      });\n    };\n\n    this.handlePassWord = event => {\n      this.setState({\n        passWord: event.target.value\n      });\n    };\n\n    this.state = {\n      userName: \"\",\n      passWord: \"\",\n      userToken: \"\"\n    };\n  }\n\n  async handleLoginButton(event) {\n    var token = await AccessToken(this.state.userName, this.state.passWord);\n    if (token !== undefined) this.setState({\n      userToken: token\n    });\n    event.persist();\n  } // handleToken(value) {\n  //   this.setState({ token: value });\n  //   console.log(token);\n  // }\n\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"base-container\",\n      ref: this.props.containerRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, \"Login\"), React.createElement(\"div\", {\n      className: \"content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"image\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: loginImg,\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, \"Username\"), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"username\",\n      placeholder: \"username\",\n      onChange: this.handleUserName.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"Password\"), React.createElement(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      placeholder: \"Password\",\n      onChange: this.handlePassWord.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      className: \"footer\",\n      onClick: this.handleLoginButton.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"Login\")));\n  }\n\n}\n\nasync function AccessToken(userName, passWord) {\n  var options = {\n    method: \"POST\",\n    uri: \"http://node-server-clc.herokuapp.com/api/v1/login\",\n    form: {\n      username: userName,\n      password: passWord\n    }\n  };\n  return new Promise((resolve, reject) => rp(options).then(response => {\n    console.long(response.status);\n    if (response !== undefined) resolve(response);else reject(response);\n  }).catch(err => {\n    console.log(err);\n  }));\n}\n\nfunction handleResponse(response, username) {\n  if (response === \"Username Exists\") {\n    alert(\"Username  already exists Exists\");\n  } else if (response === \"Internal db error\") {\n    alert(\"Something went wrong try again later\");\n  } else {\n    alert(\"Successfully insertd\");\n  }\n}","map":{"version":3,"sources":["/home/krishnavamsi/Documents/chat/src/components/login/login.jsx"],"names":["React","rp","require","Login","Component","constructor","props","handleUserName","event","setState","userName","target","value","handlePassWord","passWord","state","userToken","handleLoginButton","token","AccessToken","undefined","persist","render","containerRef","loginImg","bind","options","method","uri","form","username","password","Promise","resolve","reject","then","response","console","long","status","catch","err","log","handleResponse","alert"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport loginImg from \"../../logo.svg\";\nvar rp = require(\"request-promise\");\nexport class Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userName: \"\",\n      passWord: \"\",\n      userToken: \"\"\n    };\n  }\n  async handleLoginButton(event) {\n    var token = await AccessToken(this.state.userName, this.state.passWord);\n    if (token !== undefined) this.setState({ userToken: token });\n    event.persist();\n  }\n  // handleToken(value) {\n  //   this.setState({ token: value });\n  //   console.log(token);\n  // }\n  handleUserName = event => {\n    this.setState({ userName: event.target.value });\n  };\n  handlePassWord = event => {\n    this.setState({ passWord: event.target.value });\n  };\n  render() {\n    return (\n      <div className=\"base-container\" ref={this.props.containerRef}>\n        <div className=\"header\">Login</div>\n        <div className=\"content\">\n          <div className=\"image\">\n            <img src={loginImg} alt=\"\" />\n          </div>\n          <div className=\"form\">\n            <div className=\"form-group\">\n              <label htmlFor=\"username\">Username</label>\n              <input\n                type=\"text\"\n                name=\"username\"\n                placeholder=\"username\"\n                onChange={this.handleUserName.bind(this)}\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"password\">Password</label>\n              <input\n                type=\"password\"\n                name=\"password\"\n                placeholder=\"Password\"\n                onChange={this.handlePassWord.bind(this)}\n              />\n            </div>\n          </div>\n        </div>\n        <div className=\"footer\" onClick={this.handleLoginButton.bind(this)}>\n          <button type=\"button\" className=\"btn\">\n            Login\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\nasync function AccessToken(userName, passWord) {\n  var options = {\n    method: \"POST\",\n    uri: \"http://node-server-clc.herokuapp.com/api/v1/login\",\n    form: {\n      username: userName,\n      password: passWord\n    }\n  };\n  return new Promise((resolve, reject) =>\n    rp(options)\n      .then(response => {\n        console.long(response.status);\n        if (response !== undefined) resolve(response);\n        else reject(response);\n      })\n      .catch(err => {\n        console.log(err);\n      })\n  );\n}\nfunction handleResponse(response, username) {\n  if (response === \"Username Exists\") {\n    alert(\"Username  already exists Exists\");\n  } else if (response === \"Internal db error\") {\n    alert(\"Something went wrong try again later\");\n  } else {\n    alert(\"Successfully insertd\");\n  }\n}\n"]},"metadata":{},"sourceType":"module"}