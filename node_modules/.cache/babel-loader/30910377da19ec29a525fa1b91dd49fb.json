{"ast":null,"code":"import _slicedToArray from \"/home/krishnavamsi/Downloads/chat-master/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/krishnavamsi/Downloads/chat-master/src/components/chat/ConversationList/index.js\";\nimport React, { useState, useEffect } from \"react\";\nimport ConversationListItem from \"../ConversationListItem\";\nimport Toolbar from \"../Toolbar\";\nimport ToolbarButton from \"../ToolbarButton\";\nimport axios from \"axios\";\nimport PopUp from \"../PopUp/PopUp\";\nimport \"./ConversationList.scss\";\nexport default function ConversationList(props) {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        conversations = _useState2[0],\n        setConversations = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        showPopUp = _useState4[0],\n        setShowPopUp = _useState4[1];\n\n  useEffect(() => {\n    getConversations();\n  }, []);\n\n  function addNewUser() {\n    setShowPopUp(!showPopUp);\n  }\n\n  const getConversations = () => {\n    axios.get(\"https://randomuser.me/api/?results=20\").then(response => {\n      let newConversations = response.data.results.map(result => {\n        return {\n          photo: result.picture.large,\n          name: `${result.name.first} ${result.name.last}`,\n          text: \"Hello world! This is a long message that needs to be truncated.\"\n        };\n      });\n      setConversations([...conversations, ...newConversations]);\n    });\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"conversation-list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(Toolbar, {\n    title: \"Messenger\",\n    leftItems: [React.createElement(ToolbarButton, {\n      key: \"cog\",\n      icon: \"ion-ios-cog\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    })],\n    rightItems: [React.createElement(ToolbarButton, {\n      key: \"add\",\n      icon: \"ion-ios-add-circle-outline\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    })],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"footer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"button\",\n    onClick: addNewUser,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"New Message\")), conversations.map(conversation => React.createElement(ConversationListItem, {\n    key: conversation.name,\n    data: conversation,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }))), showPopUp ? React.createElement(PopUp, {\n    text: \"Close Me\",\n    closePopup: addNewUser,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }) : null);\n}","map":{"version":3,"sources":["/home/krishnavamsi/Downloads/chat-master/src/components/chat/ConversationList/index.js"],"names":["React","useState","useEffect","ConversationListItem","Toolbar","ToolbarButton","axios","PopUp","ConversationList","props","conversations","setConversations","showPopUp","setShowPopUp","getConversations","addNewUser","get","then","response","newConversations","data","results","map","result","photo","picture","large","name","first","last","text","conversation"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,oBAAP,MAAiC,yBAAjC;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,OAAOC,aAAP,MAA0B,kBAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AAEA,OAAO,yBAAP;AAEA,eAAe,SAASC,gBAAT,CAA0BC,KAA1B,EAAiC;AAAA,oBACJR,QAAQ,CAAC,EAAD,CADJ;AAAA;AAAA,QACvCS,aADuC;AAAA,QACxBC,gBADwB;;AAAA,qBAEZV,QAAQ,CAAC,KAAD,CAFI;AAAA;AAAA,QAEvCW,SAFuC;AAAA,QAE5BC,YAF4B;;AAG9CX,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,gBAAgB;AACjB,GAFQ,EAEN,EAFM,CAAT;;AAGA,WAASC,UAAT,GAAsB;AACpBF,IAAAA,YAAY,CAAC,CAACD,SAAF,CAAZ;AACD;;AAED,QAAME,gBAAgB,GAAG,MAAM;AAC7BR,IAAAA,KAAK,CAACU,GAAN,CAAU,uCAAV,EAAmDC,IAAnD,CAAwDC,QAAQ,IAAI;AAClE,UAAIC,gBAAgB,GAAGD,QAAQ,CAACE,IAAT,CAAcC,OAAd,CAAsBC,GAAtB,CAA0BC,MAAM,IAAI;AACzD,eAAO;AACLC,UAAAA,KAAK,EAAED,MAAM,CAACE,OAAP,CAAeC,KADjB;AAELC,UAAAA,IAAI,EAAG,GAAEJ,MAAM,CAACI,IAAP,CAAYC,KAAM,IAAGL,MAAM,CAACI,IAAP,CAAYE,IAAK,EAF1C;AAGLC,UAAAA,IAAI,EACF;AAJG,SAAP;AAMD,OAPsB,CAAvB;AAQAnB,MAAAA,gBAAgB,CAAC,CAAC,GAAGD,aAAJ,EAAmB,GAAGS,gBAAtB,CAAD,CAAhB;AACD,KAVD;AAWD,GAZD;;AAcA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,OAAD;AACE,IAAA,KAAK,EAAC,WADR;AAEE,IAAA,SAAS,EAAE,CAAC,oBAAC,aAAD;AAAe,MAAA,GAAG,EAAC,KAAnB;AAAyB,MAAA,IAAI,EAAC,aAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAD,CAFb;AAGE,IAAA,UAAU,EAAE,CACV,oBAAC,aAAD;AAAe,MAAA,GAAG,EAAC,KAAnB;AAAyB,MAAA,IAAI,EAAC,4BAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADU,CAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAQE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,OAAO,EAAEJ,UAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,CARF,EAaGL,aAAa,CAACY,GAAd,CAAkBS,YAAY,IAC7B,oBAAC,oBAAD;AAAsB,IAAA,GAAG,EAAEA,YAAY,CAACJ,IAAxC;AAA8C,IAAA,IAAI,EAAEI,YAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CAbH,CADF,EAkBGnB,SAAS,GAAG,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,UAAZ;AAAuB,IAAA,UAAU,EAAEG,UAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,GAAuD,IAlBnE,CADF;AAsBD","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport ConversationListItem from \"../ConversationListItem\";\nimport Toolbar from \"../Toolbar\";\nimport ToolbarButton from \"../ToolbarButton\";\nimport axios from \"axios\";\nimport PopUp from \"../PopUp/PopUp\";\n\nimport \"./ConversationList.scss\";\n\nexport default function ConversationList(props) {\n  const [conversations, setConversations] = useState([]);\n  const [showPopUp, setShowPopUp] = useState(false);\n  useEffect(() => {\n    getConversations();\n  }, []);\n  function addNewUser() {\n    setShowPopUp(!showPopUp);\n  }\n\n  const getConversations = () => {\n    axios.get(\"https://randomuser.me/api/?results=20\").then(response => {\n      let newConversations = response.data.results.map(result => {\n        return {\n          photo: result.picture.large,\n          name: `${result.name.first} ${result.name.last}`,\n          text:\n            \"Hello world! This is a long message that needs to be truncated.\"\n        };\n      });\n      setConversations([...conversations, ...newConversations]);\n    });\n  };\n\n  return (\n    <div>\n      <div className=\"conversation-list\">\n        <Toolbar\n          title=\"Messenger\"\n          leftItems={[<ToolbarButton key=\"cog\" icon=\"ion-ios-cog\" />]}\n          rightItems={[\n            <ToolbarButton key=\"add\" icon=\"ion-ios-add-circle-outline\" />\n          ]}\n        />\n        <div className=\"footer\">\n          <button type=\"button\" onClick={addNewUser}>\n            New Message\n          </button>\n        </div>\n        {conversations.map(conversation => (\n          <ConversationListItem key={conversation.name} data={conversation} />\n        ))}\n      </div>\n      {showPopUp ? <PopUp text=\"Close Me\" closePopup={addNewUser} /> : null}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}