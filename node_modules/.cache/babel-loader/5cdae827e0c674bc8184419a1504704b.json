{"ast":null,"code":"var _jsxFileName = \"/home/krishnavamsi/Documents/chat/src/components/login/register.jsx\";\nimport React from \"react\";\nimport loginImg from \"../../logo.svg\";\n\nvar rp = require(\"request-promise\");\n\nexport class Register extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleUserName = event => {\n      this.setState({\n        userName: event.target.value\n      });\n    };\n\n    this.handlePassWord = event => {\n      this.setState({\n        passWord: event.target.value\n      });\n    };\n\n    this.state = {\n      userName: \"\",\n      passWord: \"\"\n    };\n  }\n\n  handleRegisterButton(event) {\n    AccessToken(this.state.userName, this.state.passWord);\n    console.log(this.state.userName + \" \" + this.state.passWord);\n    event.preventDefault();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"base-container\",\n      ref: this.props.containerRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, \"Register\"), React.createElement(\"div\", {\n      className: \"content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"image\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: loginImg,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, \"Username\"), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"username\",\n      placeholder: \"username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, \"Password\"), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"password\",\n      placeholder: \"passowrd\",\n      onChange: this.handlePassWord.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      className: \"footer\",\n      onClick: this.handleRegisterButton.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"Register\")));\n  }\n\n} //\"http://node-server-clc.herokuapp.com/api/v1/create\"\n//\"http://192.168.137.1:3000/api/v1/create\"\n\nfunction AccessToken(userName, passWord) {\n  var options = {\n    method: \"POST\",\n    uri: \"http://node-server-clc.herokuapp.com/api/v1/create\",\n    form: {\n      username: userName,\n      password: passWord\n    }\n  };\n  rp(options).then(response => {\n    console.log(response);\n    handleResponse(response, userName);\n  }).catch(err => {\n    console.log(err);\n  });\n}\n\nfunction handleResponse(response, username) {\n  if (response === \"Username Exists\") {\n    alert(\"Username  already exists Exists\");\n  } else if (response === \"Internal db error\") {\n    alert(\"Something went wrong try again later\");\n  } else {\n    alert(\"Successfully insertd\");\n  }\n}\n\nexport default Register;","map":{"version":3,"sources":["/home/krishnavamsi/Documents/chat/src/components/login/register.jsx"],"names":["React","rp","require","Register","Component","constructor","props","handleUserName","event","setState","userName","target","value","handlePassWord","passWord","state","handleRegisterButton","AccessToken","console","log","preventDefault","render","containerRef","loginImg","bind","options","method","uri","form","username","password","then","response","handleResponse","catch","err","alert"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport loginImg from \"../../logo.svg\";\nvar rp = require(\"request-promise\");\nexport class Register extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userName: \"\",\n      passWord: \"\"\n    };\n  }\n  handleRegisterButton(event) {\n    AccessToken(this.state.userName, this.state.passWord);\n    console.log(this.state.userName + \" \" + this.state.passWord);\n    event.preventDefault();\n  }\n  handleUserName = event => {\n    this.setState({ userName: event.target.value });\n  };\n  handlePassWord = event => {\n    this.setState({ passWord: event.target.value });\n  };\n  render() {\n    return (\n      <div className=\"base-container\" ref={this.props.containerRef}>\n        <div className=\"header\">Register</div>\n        <div className=\"content\">\n          <div className=\"image\">\n            <img src={loginImg} />\n          </div>\n          <div className=\"form\">\n            <div className=\"form-group\">\n              <label htmlFor=\"username\">Username</label>\n              <input type=\"text\" name=\"username\" placeholder=\"username\" />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"password\">Password</label>\n              <input\n                type=\"text\"\n                name=\"password\"\n                placeholder=\"passowrd\"\n                onChange={this.handlePassWord.bind(this)}\n              />\n            </div>\n          </div>\n        </div>\n\n        <div className=\"footer\" onClick={this.handleRegisterButton.bind(this)}>\n          <button type=\"button\" className=\"btn\">\n            Register\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n//\"http://node-server-clc.herokuapp.com/api/v1/create\"\n//\"http://192.168.137.1:3000/api/v1/create\"\nfunction AccessToken(userName, passWord) {\n  var options = {\n    method: \"POST\",\n    uri: \"http://node-server-clc.herokuapp.com/api/v1/create\",\n    form: {\n      username: userName,\n      password: passWord\n    }\n  };\n  rp(options)\n    .then(response => {\n      console.log(response);\n      handleResponse(response, userName);\n    })\n    .catch(err => {\n      console.log(err);\n    });\n}\nfunction handleResponse(response, username) {\n  if (response === \"Username Exists\") {\n    alert(\"Username  already exists Exists\");\n  } else if (response === \"Internal db error\") {\n    alert(\"Something went wrong try again later\");\n  } else {\n    alert(\"Successfully insertd\");\n  }\n}\n\nexport default Register;\n"]},"metadata":{},"sourceType":"module"}