{"ast":null,"code":"var _jsxFileName = \"/home/krishnavamsi/Documents/chat/src/components/login/login.jsx\";\nimport React from \"react\";\nimport loginImg from \"../../logo.svg\";\n\nvar rp = require(\"request-promise\");\n\nexport class Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  handleRegisterButton(event) {\n    AccessToken(\"hello\", \"password\");\n    console.log(\"hello\");\n    event.preventDefault();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"base-container\",\n      ref: this.props.containerRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, \"Login\"), React.createElement(\"div\", {\n      className: \"content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"image\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: loginImg,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, \"Username\"), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"username\",\n      placeholder: \"username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, \"Password\"), React.createElement(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      placeholder: \"Password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      className: \"footer\",\n      onClick: this.handleRegisterButton.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, \"Login\")));\n  }\n\n}\n\nfunction AccessToken(username, password) {\n  var options = {\n    method: \"POST\",\n    uri: \"http://192.168.137.1:3000/api/v1/create\",\n    form: {\n      username: \"hello\",\n      password: \"1234\"\n    }\n  };\n  rp(options).then(response => {\n    console.log(response);\n    handleResponse(response, username);\n  }).catch(err => {\n    console.log(err);\n  });\n}\n\nfunction handleResponse(response, username) {\n  if (response === \"Username Exists\") {\n    alert(\"Username  already exists Exists\");\n  } else if (response === \"Internal db error\") {\n    alert(\"Something went wrong try again later\");\n  } else {\n    alert(\"Successfully insertd\");\n  }\n}","map":{"version":3,"sources":["/home/krishnavamsi/Documents/chat/src/components/login/login.jsx"],"names":["React","rp","require","Login","Component","constructor","props","state","handleRegisterButton","event","AccessToken","console","log","preventDefault","render","containerRef","loginImg","bind","username","password","options","method","uri","form","then","response","handleResponse","catch","err","alert"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport loginImg from \"../../logo.svg\";\nvar rp = require(\"request-promise\");\nexport class Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  handleRegisterButton(event) {\n    AccessToken(\"hello\", \"password\");\n    console.log(\"hello\");\n    event.preventDefault();\n  }\n  render() {\n    return (\n      <div className=\"base-container\" ref={this.props.containerRef}>\n        <div className=\"header\">Login</div>\n        <div className=\"content\">\n          <div className=\"image\">\n            <img src={loginImg} />\n          </div>\n          <div className=\"form\">\n            <div className=\"form-group\">\n              <label htmlFor=\"username\">Username</label>\n              <input type=\"text\" name=\"username\" placeholder=\"username\" />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"password\">Password</label>\n              <input type=\"password\" name=\"password\" placeholder=\"Password\" />\n            </div>\n          </div>\n        </div>\n        <div className=\"footer\" onClick={this.handleRegisterButton.bind(this)}>\n          <button type=\"button\" className=\"btn\">\n            Login\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\nfunction AccessToken(username, password) {\n  var options = {\n    method: \"POST\",\n    uri: \"http://192.168.137.1:3000/api/v1/create\",\n    form: {\n      username: \"hello\",\n      password: \"1234\"\n    }\n  };\n  rp(options)\n    .then(response => {\n      console.log(response);\n      handleResponse(response, username);\n    })\n    .catch(err => {\n      console.log(err);\n    });\n}\nfunction handleResponse(response, username) {\n  if (response === \"Username Exists\") {\n    alert(\"Username  already exists Exists\");\n  } else if (response === \"Internal db error\") {\n    alert(\"Something went wrong try again later\");\n  } else {\n    alert(\"Successfully insertd\");\n  }\n}\n"]},"metadata":{},"sourceType":"module"}