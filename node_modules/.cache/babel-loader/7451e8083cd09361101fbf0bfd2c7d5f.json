{"ast":null,"code":"var _jsxFileName = \"/home/krishnavamsi/Documents/chat-master/src/components/login/login.jsx\";\nimport React from \"react\";\nimport loginImg from \"../../logo.svg\";\nimport request from \"request\";\nexport class Login extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleUserName = event => {\n      this.setState({\n        userName: event.target.value\n      });\n    };\n\n    this.handlePassWord = event => {\n      this.setState({\n        passWord: event.target.value\n      });\n    };\n\n    this.handleToken = event => {};\n\n    this.state = {\n      userName: \"\",\n      passWord: \"\",\n      checkBox: true,\n      rememberMe: true\n    };\n  }\n\n  async handleLoginButton(event) {\n    var token = await AccessToken(this.state.userName, this.state.passWord);\n    console.log(token);\n\n    if (token !== undefined && !this.state.checkBox === true) {\n      localStorage.setItem(\"token\", token);\n      localStorage.setItem(\"rememberMe\", true);\n      this.setState({\n        rememberMe: false\n      });\n    }\n\n    event.persist();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"base-container\",\n      ref: this.props.containerRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, \"Login\"), React.createElement(\"div\", {\n      className: \"content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"image\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: loginImg,\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"Username\"), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"username\",\n      placeholder: \"username\",\n      onChange: this.handleUserName.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"Password\"), React.createElement(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      placeholder: \"Password\",\n      onChange: this.handlePassWord.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      className: \"loggedIn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"checkbox\",\n      type: \"checkbox\",\n      defaultChecked: false,\n      onChange: () => {\n        this.setState({\n          checkBox: !this.state.checkBox\n        });\n        console.log(this.state.checkBox);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"Keep me logged in \")), React.createElement(\"div\", {\n      className: \"footer\",\n      onClick: this.handleLoginButton.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Login\")));\n  }\n\n}\n\nasync function AccessToken(userName, passWord) {\n  var options = {\n    method: \"POST\",\n    uri: \"\",\n    form: {\n      username: userName,\n      password: passWord\n    }\n  };\n  return new Promise((resolve, reject) => request({\n    url: \"http://node-server-t.herokuapp.com/api/v1/login\",\n    form: {\n      username: userName,\n      password: passWord\n    },\n    method: \"POST\"\n  }, (err, res, body) => {\n    if (err) throw err;else {\n      console.log(JSON.parse(body).token.split(\"\"));\n      resolve(JSON.parse(body));\n    }\n  }));\n} // function handleResponse(response, username) {\n//   if (response === \"Username Exists\") {\n//     alert(\"Username  already exists Exists\");\n//   } else if (response === \"Internal db error\") {\n//     alert(\"Something went wrong try again later\");\n//   } else {\n//     alert(\"Successfully insertd\");\n//   }\n// }","map":{"version":3,"sources":["/home/krishnavamsi/Documents/chat-master/src/components/login/login.jsx"],"names":["React","request","Login","Component","constructor","props","handleUserName","event","setState","userName","target","value","handlePassWord","passWord","handleToken","state","checkBox","rememberMe","handleLoginButton","token","AccessToken","console","log","undefined","localStorage","setItem","persist","render","containerRef","loginImg","bind","options","method","uri","form","username","password","Promise","resolve","reject","url","err","res","body","JSON","parse","split"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport loginImg from \"../../logo.svg\";\n\nimport request from \"request\";\nexport class Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userName: \"\",\n      passWord: \"\",\n      checkBox: true,\n      rememberMe: true\n    };\n  }\n\n  async handleLoginButton(event) {\n    var token = await AccessToken(this.state.userName, this.state.passWord);\n    console.log(token);\n    if (token !== undefined && !this.state.checkBox === true) {\n      localStorage.setItem(\"token\", token);\n      localStorage.setItem(\"rememberMe\", true);\n\n      this.setState({ rememberMe: false });\n    }\n\n    event.persist();\n  }\n  handleUserName = event => {\n    this.setState({ userName: event.target.value });\n  };\n  handlePassWord = event => {\n    this.setState({ passWord: event.target.value });\n  };\n  handleToken = event => {};\n  render() {\n    return (\n      <div className=\"base-container\" ref={this.props.containerRef}>\n        <div className=\"header\">Login</div>\n        <div className=\"content\">\n          <div className=\"image\">\n            <img src={loginImg} alt=\"\" />\n          </div>\n          <div className=\"form\">\n            <div className=\"form-group\">\n              <label htmlFor=\"username\">Username</label>\n              <input\n                type=\"text\"\n                name=\"username\"\n                placeholder=\"username\"\n                onChange={this.handleUserName.bind(this)}\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"password\">Password</label>\n              <input\n                type=\"password\"\n                name=\"password\"\n                placeholder=\"Password\"\n                onChange={this.handlePassWord.bind(this)}\n              />\n            </div>\n          </div>\n        </div>\n        <div className=\"loggedIn\">\n          <input\n            className=\"checkbox\"\n            type=\"checkbox\"\n            defaultChecked={false}\n            onChange={() => {\n              this.setState({ checkBox: !this.state.checkBox });\n              console.log(this.state.checkBox);\n            }}\n          />\n          <label>Keep me logged in </label>\n        </div>\n        <div className=\"footer\" onClick={this.handleLoginButton.bind(this)}>\n          <button type=\"button\" className=\"btn\">\n            Login\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\nasync function AccessToken(userName, passWord) {\n  var options = {\n    method: \"POST\",\n    uri: \"\",\n    form: {\n      username: userName,\n      password: passWord\n    }\n  };\n  return new Promise((resolve, reject) =>\n    request(\n      {\n        url: \"http://node-server-t.herokuapp.com/api/v1/login\",\n        form: {\n          username: userName,\n          password: passWord\n        },\n        method: \"POST\"\n      },\n      (err, res, body) => {\n        if (err) throw err;\n        else {\n          console.log(JSON.parse(body).token.split(\"\"));\n          resolve(JSON.parse(body));\n        }\n      }\n    )\n  );\n}\n// function handleResponse(response, username) {\n//   if (response === \"Username Exists\") {\n//     alert(\"Username  already exists Exists\");\n//   } else if (response === \"Internal db error\") {\n//     alert(\"Something went wrong try again later\");\n//   } else {\n//     alert(\"Successfully insertd\");\n//   }\n// }\n"]},"metadata":{},"sourceType":"module"}