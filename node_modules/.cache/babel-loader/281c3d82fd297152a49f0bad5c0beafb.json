{"ast":null,"code":"import _toConsumableArray from\"/home/krishnavamsi/Downloads/chat-master/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _regeneratorRuntime from\"/home/krishnavamsi/Downloads/chat-master/node_modules/@babel/runtime/regenerator\";import _slicedToArray from\"/home/krishnavamsi/Downloads/chat-master/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import ConversationListItem from\"../ConversationListItem\";import Toolbar from\"../Toolbar\";import ToolbarButton from\"../ToolbarButton\";import axios from\"axios\";import\"./ConversationList.scss\";import request from\"request\";export default function ConversationList(props){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),conversations=_useState2[0],setConversations=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),showPopUp=_useState4[0],setShowPopUp=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),searchUserName=_useState6[0],setSearchUserName=_useState6[1];function addNewUser(){setShowPopUp(!showPopUp);}function sendMessage(username){return _regeneratorRuntime.async(function sendMessage$(_context){while(1){switch(_context.prev=_context.next){case 0:request.post({url:\"http://node-server-t.herokuapp.com/api/v1/sendMessage\",headers:{Authorization:\"Bearer \"+localStorage.getItem(\"token\")},form:{username:username,message:\"fisrtMessage\"}},function(err,res,body){if(err)throw err;else{var parseddata=JSON.parse(body);if(parseddata.status===200){var convId=parseddata.convId;getConversations(username,convId);}else if(parseddata.status===401)alert(\"invalid username\");}});case 1:case\"end\":return _context.stop();}}});}function searchUser(event){var name,body;return _regeneratorRuntime.async(function searchUser$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:if(!(event.key===\"Enter\")){_context2.next=5;break;}name=event.target.value;_context2.next=4;return _regeneratorRuntime.awrap(sendMessage(name));case 4:body=_context2.sent;case 5:case\"end\":return _context2.stop();}}});}var getConversations=function getConversations(username,convId){axios.get(\"https://randomuser.me/api/?results=1\").then(function(response){var newConversations=response.data.results.map(function(result){return{photo:result.picture.large,name:username,convId:convId};});setConversations([].concat(_toConsumableArray(conversations),_toConsumableArray(newConversations)));});};return React.createElement(\"div\",null,React.createElement(\"div\",{className:\"conversation-list\"},React.createElement(Toolbar,{title:\"Messenger\",leftItems:[React.createElement(ToolbarButton,{key:\"cog\",icon:\"ion-ios-cog\"})],rightItems:[React.createElement(ToolbarButton,{key:\"add\",icon:\"ion-ios-add-circle-outline\"})]}),React.createElement(\"div\",{className:\"footer\"},React.createElement(\"button\",{type:\"button\",onClick:addNewUser},\"New Message\")),React.createElement(\"div\",null,showPopUp?React.createElement(\"div\",{className:\"popup\"},React.createElement(\"div\",null,React.createElement(\"input\",{type:\"text\",name:\"username\",placeholder:\"username\",onKeyDown:function onKeyDown(e){searchUser(e);}})),React.createElement(\"button\",{onClick:addNewUser},\"close me\")):null),conversations.map(function(conversation){return React.createElement(ConversationListItem,{key:conversation.name,data:conversation});})));}","map":{"version":3,"sources":["/home/krishnavamsi/Downloads/chat-master/src/components/chat/ConversationList/index.js"],"names":["React","useState","useEffect","ConversationListItem","Toolbar","ToolbarButton","axios","request","ConversationList","props","conversations","setConversations","showPopUp","setShowPopUp","searchUserName","setSearchUserName","addNewUser","sendMessage","username","post","url","headers","Authorization","localStorage","getItem","form","message","err","res","body","parseddata","JSON","parse","status","convId","getConversations","alert","searchUser","event","key","name","target","value","get","then","response","newConversations","data","results","map","result","photo","picture","large","e","conversation"],"mappings":"gXAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,MAAOC,CAAAA,oBAAP,KAAiC,yBAAjC,CACA,MAAOC,CAAAA,OAAP,KAAoB,YAApB,CACA,MAAOC,CAAAA,aAAP,KAA0B,kBAA1B,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAO,yBAAP,CACA,MAAOC,CAAAA,OAAP,KAAoB,SAApB,CAEA,cAAe,SAASC,CAAAA,gBAAT,CAA0BC,KAA1B,CAAiC,eACJR,QAAQ,CAAC,EAAD,CADJ,wCACvCS,aADuC,eACxBC,gBADwB,8BAEZV,QAAQ,CAAC,KAAD,CAFI,yCAEvCW,SAFuC,eAE5BC,YAF4B,8BAGFZ,QAAQ,CAAC,EAAD,CAHN,yCAGvCa,cAHuC,eAGvBC,iBAHuB,eAI9C,QAASC,CAAAA,UAAT,EAAsB,CACpBH,YAAY,CAAC,CAACD,SAAF,CAAZ,CACD,CACD,QAAeK,CAAAA,WAAf,CAA2BC,QAA3B,uHACEX,OAAO,CAACY,IAAR,CACE,CACEC,GAAG,CAAE,uDADP,CAEEC,OAAO,CAAE,CACPC,aAAa,CAAE,UAAYC,YAAY,CAACC,OAAb,CAAqB,OAArB,CADpB,CAFX,CAKEC,IAAI,CAAE,CACJP,QAAQ,CAAEA,QADN,CAEJQ,OAAO,CAAE,cAFL,CALR,CADF,CAWE,SAACC,GAAD,CAAMC,GAAN,CAAWC,IAAX,CAAoB,CAClB,GAAIF,GAAJ,CAAS,KAAMA,CAAAA,GAAN,CAAT,IACK,CACH,GAAIG,CAAAA,UAAU,CAAGC,IAAI,CAACC,KAAL,CAAWH,IAAX,CAAjB,CACA,GAAIC,UAAU,CAACG,MAAX,GAAsB,GAA1B,CAA+B,CAC7B,GAAIC,CAAAA,MAAM,CAAGJ,UAAU,CAACI,MAAxB,CACAC,gBAAgB,CAACjB,QAAD,CAAWgB,MAAX,CAAhB,CACD,CAHD,IAGO,IAAIJ,UAAU,CAACG,MAAX,GAAsB,GAA1B,CAA+BG,KAAK,CAAC,kBAAD,CAAL,CACvC,CACF,CApBH,EADF,8CAwBA,QAAeC,CAAAA,UAAf,CAA0BC,KAA1B,4IACMA,KAAK,CAACC,GAAN,GAAc,OADpB,2BAEQC,IAFR,CAEeF,KAAK,CAACG,MAAN,CAAaC,KAF5B,mDAGqBzB,WAAW,CAACuB,IAAD,CAHhC,SAGQX,IAHR,+DAOA,GAAMM,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACjB,QAAD,CAAWgB,MAAX,CAAsB,CAC7C5B,KAAK,CAACqC,GAAN,CAAU,sCAAV,EAAkDC,IAAlD,CAAuD,SAAAC,QAAQ,CAAI,CACjE,GAAIC,CAAAA,gBAAgB,CAAGD,QAAQ,CAACE,IAAT,CAAcC,OAAd,CAAsBC,GAAtB,CAA0B,SAAAC,MAAM,CAAI,CACzD,MAAO,CACLC,KAAK,CAAED,MAAM,CAACE,OAAP,CAAeC,KADjB,CAELb,IAAI,CAAEtB,QAFD,CAGLgB,MAAM,CAAEA,MAHH,CAAP,CAKD,CANsB,CAAvB,CAOAvB,gBAAgB,8BAAKD,aAAL,qBAAuBoC,gBAAvB,GAAhB,CACD,CATD,EAUD,CAXD,CAaA,MACE,gCACE,2BAAK,SAAS,CAAC,mBAAf,EACE,oBAAC,OAAD,EACE,KAAK,CAAC,WADR,CAEE,SAAS,CAAE,CAAC,oBAAC,aAAD,EAAe,GAAG,CAAC,KAAnB,CAAyB,IAAI,CAAC,aAA9B,EAAD,CAFb,CAGE,UAAU,CAAE,CACV,oBAAC,aAAD,EAAe,GAAG,CAAC,KAAnB,CAAyB,IAAI,CAAC,4BAA9B,EADU,CAHd,EADF,CAQE,2BAAK,SAAS,CAAC,QAAf,EACE,8BAAQ,IAAI,CAAC,QAAb,CAAsB,OAAO,CAAE9B,UAA/B,gBADF,CARF,CAaE,+BACGJ,SAAS,CACR,2BAAK,SAAS,CAAC,OAAf,EACE,+BACE,6BACE,IAAI,CAAC,MADP,CAEE,IAAI,CAAC,UAFP,CAGE,WAAW,CAAC,UAHd,CAIE,SAAS,CAAE,mBAAA0C,CAAC,CAAI,CACdjB,UAAU,CAACiB,CAAD,CAAV,CACD,CANH,EADF,CADF,CAWE,8BAAQ,OAAO,CAAEtC,UAAjB,aAXF,CADQ,CAcN,IAfN,CAbF,CA8BGN,aAAa,CAACuC,GAAd,CAAkB,SAAAM,YAAY,QAC7B,qBAAC,oBAAD,EAAsB,GAAG,CAAEA,YAAY,CAACf,IAAxC,CAA8C,IAAI,CAAEe,YAApD,EAD6B,EAA9B,CA9BH,CADF,CADF,CAsCD","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport ConversationListItem from \"../ConversationListItem\";\nimport Toolbar from \"../Toolbar\";\nimport ToolbarButton from \"../ToolbarButton\";\nimport axios from \"axios\";\nimport \"./ConversationList.scss\";\nimport request from \"request\";\n\nexport default function ConversationList(props) {\n  const [conversations, setConversations] = useState([]);\n  const [showPopUp, setShowPopUp] = useState(false);\n  const [searchUserName, setSearchUserName] = useState(\"\");\n  function addNewUser() {\n    setShowPopUp(!showPopUp);\n  }\n  async function sendMessage(username) {\n    request.post(\n      {\n        url: \"http://node-server-t.herokuapp.com/api/v1/sendMessage\",\n        headers: {\n          Authorization: \"Bearer \" + localStorage.getItem(\"token\")\n        },\n        form: {\n          username: username,\n          message: \"fisrtMessage\"\n        }\n      },\n      (err, res, body) => {\n        if (err) throw err;\n        else {\n          var parseddata = JSON.parse(body);\n          if (parseddata.status === 200) {\n            var convId = parseddata.convId;\n            getConversations(username, convId);\n          } else if (parseddata.status === 401) alert(\"invalid username\");\n        }\n      }\n    );\n  }\n  async function searchUser(event) {\n    if (event.key === \"Enter\") {\n      var name = event.target.value;\n      var body = await sendMessage(name);\n    }\n  }\n\n  const getConversations = (username, convId) => {\n    axios.get(\"https://randomuser.me/api/?results=1\").then(response => {\n      let newConversations = response.data.results.map(result => {\n        return {\n          photo: result.picture.large,\n          name: username,\n          convId: convId\n        };\n      });\n      setConversations([...conversations, ...newConversations]);\n    });\n  };\n\n  return (\n    <div>\n      <div className=\"conversation-list\">\n        <Toolbar\n          title=\"Messenger\"\n          leftItems={[<ToolbarButton key=\"cog\" icon=\"ion-ios-cog\" />]}\n          rightItems={[\n            <ToolbarButton key=\"add\" icon=\"ion-ios-add-circle-outline\" />\n          ]}\n        />\n        <div className=\"footer\">\n          <button type=\"button\" onClick={addNewUser}>\n            New Message\n          </button>\n        </div>\n        <div>\n          {showPopUp ? (\n            <div className=\"popup\">\n              <div>\n                <input\n                  type=\"text\"\n                  name=\"username\"\n                  placeholder=\"username\"\n                  onKeyDown={e => {\n                    searchUser(e);\n                  }}\n                />\n              </div>\n              <button onClick={addNewUser}>close me</button>\n            </div>\n          ) : null}\n        </div>\n        {conversations.map(conversation => (\n          <ConversationListItem key={conversation.name} data={conversation} />\n        ))}\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}